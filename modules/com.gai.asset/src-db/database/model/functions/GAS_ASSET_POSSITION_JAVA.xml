<?xml version="1.0"?>
  <database name="FUNCTION GAS_ASSET_POSSITION_JAVA">
    <function name="GAS_ASSET_POSSITION_JAVA" type="NULL">
      <parameter name="p_aasset_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_gmmmasterdepartment_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_date" type="TIMESTAMP" mode="in">
        <default/>
      </parameter>
      <parameter name="p_movement" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_pic" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_resultstr" type="VARCHAR" mode="out">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
v_Record_ID VARCHAR2(32);
v_AD_User_ID VARCHAR2(32);
V_MASTERDEPARTEMENTID VARCHAR(32);
V_GAHHISTORICALASSET VARCHAR(32);
v_User VARCHAR2(32);
v_GMM_Master_Department_ID VARCHAR(32);
v_DATE DATE;
 TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  
BEGIN
BEGIN
  IF(p_AASSET_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_AASSET_ID) ;
      v_ResultStr:='PInstanceNotFound';
      AD_UPDATE_PINSTANCE(p_AASSET_ID, NULL, 'Y', NULL, NULL) ;
      -- Get Parameters
      v_ResultStr:='ReadingParameters';
        
          V_MASTERDEPARTEMENTID := p_GMMMASTERDEPARTMENT_ID;
          DBMS_OUTPUT.PUT_LINE( p_GMMMASTERDEPARTMENT_ID || V_MASTERDEPARTEMENTID) ;
        
        v_DATE := p_date;        
        v_Record_ID:= p_AASSET_ID;
        v_GMM_Master_Department_ID := p_GMMMASTERDEPARTMENT_ID;
      --BEGIN
        FOR CUR_HISTORICAL_ASSET IN
      (
        SELECT AA.A_ASSET_ID, AA.AD_CLIENT_ID, AA.AD_ORG_ID, AA.ISACTIVE, AA.CREATED, AA.CREATEDBY, AA.UPDATED, AA.UPDATEDBY--,
        , AA.EM_GAS_TGLMOVE AS TGLPENEMPATAN
         --, AA.EM_GMM_MASTER_DEPARTMENT_ID AS POSSITION, 
        ,AA.EM_GAI_KANTOR_ID AS POSSITION,
        AA.EM_GAS_NAMAPEMEGANG AS PIC--GMD.GMM_MASTER_DEPARTMENT_ID
        FROM A_ASSET AA--, GMM_MASTER_DEPARTMENT GMD ,
        WHERE --AA.EM_GMM_MASTER_DEPARTMENT_ID= GMD.GMM_MASTER_DEPARTMENT_ID
        --AND 
        AA.A_ASSET_ID = v_Record_ID
      )
    LOOP
    --DBMS_OUTPUT.PUT_LINE('kkkk ' || v_Record_ID) ;
     Ad_Sequence_Next('GAS_HISTORICAL_ASSET', CUR_HISTORICAL_ASSET.AD_CLIENT_ID, V_GAHHISTORICALASSET);
      INSERT INTO GAS_HISTORICAL_ASSET(GAS_HISTORICAL_ASSET_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
            CREATEDBY, UPDATED, UPDATEDBY,         
            MOVEMENTDATE
            --, EM_GMM_MASTER_DEPARTMENT_ID
            ,EM_GAI_KANTOR_ID
            , A_ASSET_ID, PIC_ID)
            
      VALUES (V_GAHHISTORICALASSET, CUR_HISTORICAL_ASSET.AD_CLIENT_ID,  CUR_HISTORICAL_ASSET.AD_ORG_ID, 'Y', TO_DATE(NOW()), 
            CUR_HISTORICAL_ASSET.CREATEDBY, TO_DATE(NOW()), CUR_HISTORICAL_ASSET.CREATEDBY, 
            CUR_HISTORICAL_ASSET.TGLPENEMPATAN
            --,'-'
            , CUR_HISTORICAL_ASSET.POSSITION, CUR_HISTORICAL_ASSET.A_ASSET_ID, CUR_HISTORICAL_ASSET.PIC)
            ;  
      
      END LOOP;
     /* EXCEPTION WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20000, 'Masuk Error') ;
      END;*/
      UPDATE A_ASSET SET 
      --EM_GMM_MASTER_DEPARTMENT_ID = V_MASTERDEPARTEMENTID 
      EM_GAI_KANTOR_ID = V_MASTERDEPARTEMENTID
      , EM_GAS_STATUS = p_movement||'S', EM_GAS_NAMAPEMEGANG = p_PIC,
      EM_GAS_TGLMOVE = v_DATE
      WHERE A_ASSET_ID = v_Record_ID; 
      AD_UPDATE_PINSTANCE(p_AASSET_ID, V_AD_User_ID, 'Y', 1, '@Success@');
  END IF;
  --RETURN;
END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  p_ResultStr:=v_ResultStr;
  ROLLBACK;

END GAS_ASSET_POSSITION_JAVA]]></body>
    </function>
  </database>
