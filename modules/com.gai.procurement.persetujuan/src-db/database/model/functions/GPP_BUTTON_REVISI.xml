<?xml version="1.0"?>
  <database name="FUNCTION GPP_BUTTON_REVISI">
    <function name="GPP_BUTTON_REVISI" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
v_Record_ID VARCHAR2(32);
v_AD_User_ID VARCHAR2(32);
V_MASTERDEPT_ID VARCHAR2(32);
v_GPPPERSPEMBELIANID VARCHAR(32);
v_User VARCHAR2(32);
v_DocumentNo VARCHAR2(60);
v_DocType_ID VARCHAR2(32);
v_P_Diperiksa_ID VARCHAR2(32);

 TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  CUR_REQUISITION RECORD;
  
BEGIN
--    IF (p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
      v_ResultStr:='PInstanceNotFound';
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
      -- Get Parameters
      v_ResultStr:='ReadingParameters';
    BEGIN
            
      FOR Cur_Parameter IN
        (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String,
          p.P_Number, p.P_Date
        FROM AD_PINSTANCE i
        LEFT JOIN AD_PINSTANCE_PARA p
          ON i.AD_PInstance_ID=p.AD_PInstance_ID
        WHERE i.AD_PInstance_ID=p_PInstance_ID
        ORDER BY p.SeqNo
        )
      LOOP
        v_Record_ID:=Cur_Parameter.Record_ID;
        v_AD_User_ID:=Cur_Parameter.AD_User_ID;
      END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
  /*FOR CUR_REQUISITION IN
      (
        SELECT  MR.M_REQUISITION_ID, MR.AD_CLIENT_ID, MR.DESCRIPTION AS PRODUK,
        MR.AD_ORG_ID, MR.ISACTIVE, MR.CREATED, MR.CREATEDBY, MR.UPDATED, MR.UPDATEDBY, MR.DOCUMENTNO, 
        MR.AD_USER_ID, MR.EM_GMM_MASTER_DEPARTMENT_ID AS DEPARTMENT
        FROM M_REQUISITION MR
        WHERE MR.M_REQUISITION_ID = v_Record_ID
      )
    LOOP
    --DBMS_OUTPUT.PUT_LINE('kkkk ' || v_Record_ID) ;
     
     SELECT GMM_MASTER_DEPARTMENT_ID 
     INTO V_MASTERDEPT_ID
     FROM GMM_MASTER_DEPARTMENT GMD
     WHERE DEPARTMENT = 'Umum'
     AND CUR_REQUISITION.AD_ORG_ID = GMD.AD_ORG_ID;
     
     v_DocType_ID:=Ad_Get_Doctype(CUR_REQUISITION.AD_Client_ID, CUR_REQUISITION.AD_Org_ID, 'GPP_STJ') ;
     Ad_Sequence_Next('GPP_PERSPEMBELIAN', CUR_REQUISITION.AD_CLIENT_ID, v_GPPPERSPEMBELIANID);
     Ad_Sequence_Doctype(v_DocType_ID, CUR_REQUISITION.AD_Client_ID, 'Y', v_DocumentNo) ;
     
     INSERT INTO GPP_PERSPEMBELIAN(GPP_PERSPEMBELIAN_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
            CREATEDBY, UPDATED, UPDATEDBY, C_DocType_ID, DocStatus,  KETERANGAN,      
            M_PRODUCT_ID, NEEDBYDATE, QUANTITY, DOCUMENTNO, UNITPRICE, AD_USER_ID, EM_GMM_MASTER_DEPT_ID, M_REQUISITION_ID)
            
     VALUES (v_GPPPERSPEMBELIANID, CUR_REQUISITION.AD_CLIENT_ID,  CUR_REQUISITION.AD_ORG_ID, 'Y', TO_DATE(NOW()), 
            v_AD_User_ID, TO_DATE(NOW()), v_AD_User_ID, v_DocType_ID, 'DR',CUR_REQUISITION.PRODUK,
            NULL, NULL,
            NULL, v_DocumentNo, NULL, CUR_REQUISITION.AD_USER_ID , CUR_REQUISITION.DEPARTMENT, v_Record_ID)--
     ; 
     END LOOP;
     */
     update M_REQUISITION SET M_REQUISITION.EM_GRQ_RECEIVESTATUS = 'RE' WHERE M_REQUISITION_ID = v_Record_ID;
     
     AD_UPDATE_PINSTANCE(p_PInstance_ID, V_AD_User_ID, 'Y', 1, '@Success@');
     RETURN;
END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  ELSE
    RAISE;
  END IF;
  RETURN;
END GPP_BUTTON_REVISI]]></body>
    </function>
  </database>
