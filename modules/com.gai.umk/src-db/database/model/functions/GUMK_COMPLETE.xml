<?xml version="1.0"?>
  <database name="FUNCTION GUMK_COMPLETE">
    <function name="GUMK_COMPLETE" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    -- Pegawai untuk diterima
    Cur_Pegawai RECORD;
    -- Parameter Variables
    v_AD_User_ID VARCHAR2(32) ;
    v_ClientID varchar2(32) ;
    v_status VARCHAR2(32) ;
    v_documentno VARCHAR2(32) ;
      v_requestor VARCHAR2(32) ;
      v_description VARCHAR2(500) ;
      v_OrgID VARCHAR2(32) ;
      v_fin_payment_ID VARCHAR2(32) ;
      v_c_currency_id VARCHAR2(32) ;
      v_c_doctype_id VARCHAR2(32) ;
      v_fin_financial_account_id VARCHAR2(32) ;
      v_fin_paymentmethod_id VARCHAR2(32) ;
      v_DocType_ID VARCHAR2(32) ;
      v_c_glitem_id VARCHAR2(32) ;
      v_fin_payment_schedule_id VARCHAR2(32) ;
      v_scheduledetail_id VARCHAR2(32) ;
      v_fin_payment_detail_ID VARCHAR2(32) ;
      v_amount NUMBER ;
--    v_LineNo NUMERIC(10) ;
      v_em_gbg_budget_id VARCHAR2(32);
      v_tanggal_penerimaan_umk DATE;
      
      v_BudgetAmount NUMBER := 0;
      
    END_PROCESS BOOLEAN:=false;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.CreatedBy AS AD_User_ID
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;
      
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    
    IF(NOT END_PROCESS) THEN

    SELECT AD_Client_ID,
      AD_Org_ID,
      documentno,
      description,
      tanggal_penerimaan_umk,
      c_currency_id , 
      c_doctype_id,
      fin_financial_account_id, 
      fin_paymentmethod_id,
      nominal_penjaguann_umk,
      EM_GBG_BUDGET_ID
    INTO v_ClientID,
      v_OrgID,
      v_documentno,
      v_description,
      v_tanggal_penerimaan_umk,
      v_c_currency_id,
      v_c_doctype_id,
      v_fin_financial_account_id,
      v_fin_paymentmethod_id,
      v_amount,
      v_em_gbg_budget_id
    FROM gumk_umk
    WHERE gumk_umk_id=v_Record_ID;


	--v_DocType_ID:=Ad_Get_Doctype(v_ClientID,v_OrgID, 'APP') ;
	--RAISE_APPLICATION_ERROR(-20000, v_c_doctype_id);

  
	--RAISE_APPLICATION_ERROR(-20000, v_documentno);
      BEGIN
        IF (v_em_gbg_budget_id is not null) THEN
            Select EM_GBG_AVAILABLEAMT INTO v_BudgetAmount 
            FROM C_BUDGET WHERE C_BUDGET_ID = v_em_gbg_budget_id;
        
        --IF (v_BudgetAmount>=v_amount) THEN            
          update C_BUDGET set EM_GBG_ACTUALAMT = EM_GBG_ACTUALAMT+v_amount, EM_GBG_AVAILABLEAMT =EM_GBG_AVAILABLEAMT-v_amount,
          EM_GBG_ESTIMASIAMT =EM_GBG_ESTIMASIAMT-v_amount
          where C_BUDGET_ID = v_em_gbg_budget_id;
        END IF;
          
        SELECT c_doctype_id INTO v_DocType_ID FROM c_doctype WHERE c_doctype_id='C57E9B1ADB474E35B734964F30BC8FE5';
        Ad_Sequence_Doctype(v_DocType_ID, v_ClientID, 'Y', v_documentno) ;
        Ad_Sequence_Next('fin_payment', v_ClientID, v_fin_payment_id) ;
      
        INSERT INTO fin_payment(
            fin_payment_id, ad_client_id, ad_org_id, isactive, created, em_gumk_umk_id,
            createdby, updated, updatedby , paymentdate, description, c_currency_id , c_doctype_id,
            fin_financial_account_id, fin_paymentmethod_id, documentno , status ,processed, isreceipt, finacc_txn_convert_rate, amount, finacc_txn_amount)
            
        VALUES (v_fin_payment_id, v_ClientID, v_OrgID, 'Y', now(), v_Record_ID,
            v_AD_User_ID, now(), v_AD_User_ID, 
             v_tanggal_penerimaan_umk,v_description,v_c_currency_id,v_c_doctype_id,
            v_fin_financial_account_id,v_fin_paymentmethod_id,v_documentno, 'PWNC', 'N' , 'N',1 , v_amount, v_amount);
    
            --RAISE v_fin_payment_id; --OBTG:-20000
      EXCEPTION
      WHEN OTHERS THEN
        --      DBMS_OUTPUT.PUT_LINE('No Data Found Exception');
        v_Message:= '@ERROR=' || SQLERRM;
        AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20000, v_Message);
      END;
    
    
      BEGIN
      Select c_glitem_id
      Into v_c_glitem_id
      from c_glitem
      where name='Uang Muka Kerja';
    
      --v_amount
      Ad_Sequence_Next('fin_payment_detail', v_ClientID, v_fin_payment_detail_id) ;
      
      INSERT INTO fin_payment_detail (
                fin_payment_detail_id, ad_client_id, ad_org_id, isactive, created, amount, isprepayment,
                fin_payment_id ,createdby, updated, updatedby, writeoffamt, c_glitem_id, refund)
                
            VALUES (v_fin_payment_detail_id, v_ClientID, v_OrgID, 'Y', now(),v_amount, 'N'
                , v_fin_payment_id,v_AD_User_ID, now(), v_AD_User_ID, 0, v_c_glitem_id, 'N');
    
      EXCEPTION
      WHEN OTHERS THEN
        --      DBMS_OUTPUT.PUT_LINE('No Data Found Exception');
        v_Message:= '@ERROR=' || SQLERRM;
        AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20000, v_Message);
      END;
      --V_duedate,
    
      BEGIN
      Ad_Sequence_Next('fin_payment_schedule', v_ClientID, v_fin_payment_schedule_id) ;
      INSERT INTO fin_payment_schedule (
            fin_payment_schedule_id, ad_client_id, ad_org_id, isactive, created, duedate, fin_paymentmethod_id , c_currency_id, amount, 
            paidamt, outstandingamt, expecteddate, em_aprm_modif_paym_sched, em_aprm_modif_paym_out_sched
            ,createdby, updated, updatedby )
            
            VALUES (v_fin_payment_schedule_id, v_ClientID, v_OrgID, 'Y', now(),now(),v_fin_paymentmethod_id, v_c_currency_id, 0, 
            0, 0, now(), 'N', 'N', v_AD_User_ID, now(), v_AD_User_ID);
    
      EXCEPTION
      WHEN OTHERS THEN
        --      DBMS_OUTPUT.PUT_LINE('No Data Found Exception');
        v_Message:= '@ERROR=' || SQLERRM;
        AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20000, v_Message);
      END;
    
      BEGIN
      Ad_Sequence_Next('fin_payment_scheduledetail', v_ClientID, v_scheduledetail_id) ;
      --v_amount
      INSERT INTO fin_payment_scheduledetail (
            fin_payment_scheduledetail_id, ad_client_id, ad_org_id, isactive, created, amount, iscanceled,
            doubtfuldebt_amount, isinvoicepaid, createdby, updated, updatedby ,fin_payment_detail_id)
            
            VALUES (v_scheduledetail_id, v_ClientID, v_OrgID, 'Y', now(),v_amount, 'N',
            0, 'N',v_AD_User_ID, now(), v_AD_User_ID,v_fin_payment_detail_id);
      EXCEPTION
      WHEN OTHERS THEN
        --DBMS_OUTPUT.PUT_LINE('No Data Found Exception');
        
        v_Message:= '@ERROR=' || SQLERRM;
        AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20000, v_Message);
      END;
    
      UPDATE fin_payment SET processed = 'Y'	WHERE fin_payment_id=v_fin_payment_id;
      UPDATE gumk_umk SET status = 'complete',complete='Y'	WHERE gumk_umk_id=v_Record_ID; 
  
      /*ELSE
        AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20000, '@GUMK_NotEnoughAvaliable@');
      END IF;*/
    --END IF;
  
  --update c_budged

    END IF;--END_PROCESS
    --<<END_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    IF (v_BudgetAmount>=v_amount) THEN
      AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message||' No. Payment: '||v_documentno);
    ELSE
        IF (v_em_gbg_budget_id IS NULL) THEN
          AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message||' No. Payment: '||v_documentno);
        ELSE  
          AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, '@GUMK_NotEnoughAvaliable@'||' No. Payment: '||v_documentno) ;
        END IF;
    END IF;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  ROLLBACK;
  RETURN;
END GUMK_COMPLETE
]]></body>
    </function>
  </database>
